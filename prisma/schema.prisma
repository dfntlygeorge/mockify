// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(cuid())
  email          String       @unique
  hashedPassword String       @map("hashed_password")
  sessions       Session[]
  mockExams      MockExam[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @map("user_id")
  expires      DateTime
  requires2FA  Boolean  @default(false)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model MockExam {
  id          String     @id @default(cuid())
  title       String
  subject     String?
  notes       String?
  userId      String     @map("user_id")
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions   Question[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("mock_exams")
}

model Question {
  id           String    @id @default(cuid())
  mockExamId   String    @map("mock_exam_id")
  mockExam     MockExam  @relation(fields: [mockExamId], references: [id], onDelete: Cascade)

  type         QuestionType
  prompt       String
  choices      String[] 
  correctAnswer String

  userAnswer   String?
  isCorrect    Boolean?
  isGuessed    Boolean? @default(false)

  @@map("questions")
}

enum QuestionType {
  MCQ
  TRUE_FALSE
  FILL_IN
}

